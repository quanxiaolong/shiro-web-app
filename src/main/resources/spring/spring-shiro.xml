<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->  
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"/>
		<property name="hashIterations" value="1"/>
		<property name="storedCredentialsHexEncoded" value="true"/>
	</bean>  
  
	<!-- 缓存管理 -->  
	<!-- <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>   -->
	
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:properties/shiro-ehcache.xml"></property>
	</bean>
	
	<!--   
		使用Shiro自带的JdbcRealm类  
		指定密码匹配所需要用到的加密对象  
		指定存储用户、角色、权限许可的数据源及相关查询语句  
	 -->  
	<bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">  
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
		<property name="permissionsLookupEnabled" value="true"></property>  
		<property name="dataSource" ref="dataSource"></property>  
		<property name="authenticationQuery"  
			value="SELECT password FROM sys_users WHERE username = ?"></property>  
		<property name="userRolesQuery"  
			value="SELECT sys_roles.role from sys_roles  join sys_users_roles ON sys_users_roles.role_id = sys_roles.id  join sys_users ON sys_users_roles.user_id=sys_users.id and sys_users.username = ?"></property>  
		<property name="permissionsQuery"  
			value="SELECT sys_permissions.permission from sys_permissions  join sys_roles_permissions ON sys_roles_permissions.permission_id = sys_permissions.id  join sys_roles ON sys_roles_permissions.role_id=sys_roles.id and sys_roles.role = ?"></property>  
		<property name="cachingEnabled" value="true"></property>
		<property name="authenticationCachingEnabled" value="true"></property>
		<property name="authenticationCacheName" value="authenticationCache"></property>
		<property name="authorizationCachingEnabled" value="true"></property>
		<property name="authorizationCacheName" value="authorizationCache"></property>
	</bean>  
  
	<!-- Shiro安全管理器 -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
		<property name="realm" ref="jdbcRealm"></property>  
		<property name="cacheManager" ref="cacheManager"></property>  
	</bean>
	
	<!--   
	   Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行  
	   Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持   
	-->  
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login.html" />
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
		<!-- Shiro的核心安全接口，这个属性是必须的 -->  
		<property name="securityManager" ref="securityManager"></property>  
		<!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->  
		<property name="loginUrl" value="/login.html"></property>  
		<!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->  
		<property name="successUrl" value="/" ></property>
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->  
		<property name="unauthorizedUrl" value="/about/unAuthc.html"></property>
		<property name="filterChainDefinitions">  
			<value>  
				/login.html=authc
				/about/welcome.html=user
				/roles.html=authc,roles[admin123]
				/perms.html=authc,perms["user:create"]
				/logout.html = logout
			</value>  
		</property>  
	</bean>  
  
	<!--   
		开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，  
		并在必要时进行安全逻辑验证  
	-->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	


</beans>